import java.util.*;

class TradeInDevice {
    private String model;
    private double estimatedValue;  // –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ Trade-in

    public TradeInDevice(String model, double estimatedValue) {
        this.model = model;
        this.estimatedValue = estimatedValue;
    }

    public String getModel() {
        return model;
    }

    public double getEstimatedValue() {
        return estimatedValue;
    }

    @Override
    public String toString() {
        return String.format("%s (–æ—Ü–µ–Ω–∫–∞: $%.2f)", model, estimatedValue);
    }
}

public class TradeInSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

       
        List<TradeInDevice> acceptedDevices = Arrays.asList(
            new TradeInDevice("iPhone 11", 250.0),
            new TradeInDevice("Samsung Galaxy S20", 200.0),
            new TradeInDevice("Google Pixel 5", 180.0),
            new TradeInDevice("OnePlus 8", 150.0),
            new TradeInDevice("Xiaomi Redmi Note 10", 100.0)
        );

        
        Map<String, Double> newDevices = new HashMap<>();
        newDevices.put("iPhone 15", 999.0);
        newDevices.put("Samsung Galaxy S23", 899.0);
        newDevices.put("Google Pixel 8", 799.0);
        newDevices.put("OnePlus 11", 699.0);
        newDevices.put("Xiaomi 13", 599.0);

        System.out.println("üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–ª—è Trade-in:");
        acceptedDevices.forEach(System.out::println);

        System.out.print("\n–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ");
        String userDeviceModel = scanner.nextLine();

      
        Optional<TradeInDevice> userDevice = acceptedDevices.stream()
            .filter(device -> device.getModel().equalsIgnoreCase(userDeviceModel))
            .findFirst();

        if (userDevice.isEmpty()) {
            System.out.println("‚ùå –í–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤ Trade-in.");
            return;
        }

        System.out.println("\nüíµ –í–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –≤: $" + userDevice.get().getEstimatedValue());

        System.out.println("\nüÜï –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:");
        newDevices.forEach((model, price) -> 
            System.out.printf("%s - $%.2f\n", model, price));

        System.out.print("\n–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –Ω–æ–≤–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å: ");
        String newDeviceModel = scanner.nextLine();

        if (!newDevices.containsKey(newDeviceModel)) {
            System.out.println("‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
            return;
        }

        double newDevicePrice = newDevices.get(newDeviceModel);
        double tradeInValue = userDevice.get().getEstimatedValue();
        double finalPrice = newDevicePrice - tradeInValue;

        System.out.printf("\n‚úÖ –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ –ø–æ—Å–ª–µ Trade-in: $%.2f\n", finalPrice);
        System.out.printf("(–°–∫–∏–¥–∫–∞: $%.2f)\n", tradeInValue);
    }
}
